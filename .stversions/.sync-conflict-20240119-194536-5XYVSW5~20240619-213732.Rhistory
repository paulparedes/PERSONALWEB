blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown::build_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::new_post_addin()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::preview_site(startup = TRUE)
blogdown:::preview_site(startup = TRUE)
blogdown:::preview_site(startup = TRUE)
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::preview_site(startup = TRUE)
blogdown:::preview_site(startup = TRUE)
blogdown:::preview_site(startup = TRUE)
blogdown:::serve_site()
blogdown:::preview_site(startup = TRUE)
blogdown:::preview_site(startup = TRUE)
blogdown:::preview_site(startup = TRUE)
blogdown:::preview_site(startup = TRUE)
blogdown:::preview_site(startup = TRUE)
blogdown:::preview_site(startup = TRUE)
blogdown:::preview_site(startup = TRUE)
blogdown:::preview_site(startup = TRUE)
blogdown:::preview_site(startup = TRUE)
blogdown::build_site()
blogdown:::preview_site(startup = TRUE)
blogdown:::preview_site(startup = TRUE)
blogdown:::preview_site(startup = TRUE)
install.packages(c("backports", "dbplyr", "future", "renv"))
blogdown:::preview_site(startup = TRUE)
blogdown:::preview_site(startup = TRUE)
blogdown:::preview_site(startup = TRUE)
blogdown:::preview_site(startup = TRUE)
blogdown:::preview_site(startup = TRUE)
blogdown:::serve_site()
blogdown:::preview_site(startup = TRUE)
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::preview_site()
blogdown:::preview_site()
blogdown:::preview_site()
blogdown:::preview_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown::install_hugo()
blogdown:::serve_site()
install.packages("distill")
blogdown:::preview_site()
DiagrammeR::mermaid(sequenceDiagram
participant EMPRESA
participant SINDICATO
participant AUTORIDAD
participant ÓRGANO INDEPENDIENTE
Note over EMPRESA, SINDICATO: Servicios mínimos: <br/>-Número y ocupación trabajadores <br/>necesarios <br/>-Horarios y turnos <br/>-Periodicidad <br/>-Oportunidad
EMPRESA->>SINDICATO: Enero, comunica servicios mínimos
EMPRESA->>AUTORIDAD: Enero, comunica servicios mínimos
SINDICATO->>AUTORIDAD: Divergencia: en 30 d.n. presenta informe con observaciones
SINDICATO->>AUTORIDAD: No divergencia: aceptación tácita de la comunicación del empleador
AUTORIDAD->>ÓRGANO INDEPENDIENTE: En 10 d.h. designa al O.I. determinar servicios mínimos
loop Check
EMPRESA->>EMPRESA: Si empresa no presenta, <br/>ver divergencia inmediata anterior
end
loop Check
ÓRGANO INDEPENDIENTE->>ÓRGANO INDEPENDIENTE: -Comunica si acepta en 10 d.h. <br/>-Si acepta, 30 d.h. resuelve <br/>-Si no responde, AT designa otro O.I. <br/>-O resuelve la divergencia <br/>-También resuelve <br/>si vence plazo sin que OI resuelva
end
Note over SINDICATO, AUTORIDAD:-Autoridad resuelve divergencia <br/>en 5 d.h. de recibido el informe. <br/>-Cabe apelación en 15 d.h. <br/>-Autoridad traslada apel. al O.I. <br/>en 5 d.h. <br/> -Superior resuelve apelación)
blogdown:::preview_site()
---
title: "Procedimiento de divergencia sobre la comunicación de los servicios mínimos"
author: ''
date: '2020-01-15'
output: pdf_document
diagram: yes
featured: no
image:
caption: ''
focal_point: ''
preview_only: no
lastmod: '2020-01-15T19:38:46-05:00'
categories:
- Procedimientos administrativos
projects: []
slug: divergencia-sobre-la-comunicación-de-los-servicios-mínimos
subtitle: ''
summary: ''
tags:
- Huelga
authors: []
---
DiagrammeR::mermaid("
sequenceDiagram
participant EMPRESA
participant SINDICATO
participant AUTORIDAD
participant ÓRGANO INDEPENDIENTE
Note over EMPRESA, SINDICATO: Servicios mínimos: <br/>-Número y ocupación trabajadores <br/>necesarios <br/>-Horarios y turnos <br/>-Periodicidad <br/>-Oportunidad
EMPRESA->>SINDICATO: Enero, comunica servicios mínimos
EMPRESA->>AUTORIDAD: Enero, comunica servicios mínimos
SINDICATO->>AUTORIDAD: Divergencia: en 30 d.n. presenta informe con observaciones
SINDICATO->>AUTORIDAD: No divergencia: aceptación tácita de la comunicación del empleador
AUTORIDAD->>ÓRGANO INDEPENDIENTE: En 10 d.h. designa al O.I. determinar servicios mínimos
loop Check
EMPRESA->>EMPRESA: Si empresa no presenta, <br/>ver divergencia inmediata anterior
end
loop Check
ÓRGANO INDEPENDIENTE->>ÓRGANO INDEPENDIENTE: -Comunica si acepta en 10 d.h. <br/>-Si acepta, 30 d.h. resuelve <br/>-Si no responde, AT designa otro O.I. <br/>-O resuelve la divergencia <br/>-También resuelve <br/>si vence plazo sin que OI resuelva
end
Note over SINDICATO, AUTORIDAD:-Autoridad resuelve divergencia <br/>en 5 d.h. de recibido el informe. <br/>-Cabe apelación en 15 d.h. <br/>-Autoridad traslada apel. al O.I. <br/>en 5 d.h. <br/> -Superior resuelve apelación
")
DiagrammeR::mermaid("
sequenceDiagram
participant EMPRESA
participant SINDICATO
participant AUTORIDAD
participant ÓRGANO INDEPENDIENTE
Note over EMPRESA, SINDICATO: Servicios mínimos: <br/>-Número y ocupación trabajadores <br/>necesarios <br/>-Horarios y turnos <br/>-Periodicidad <br/>-Oportunidad
EMPRESA->>SINDICATO: Enero, comunica servicios mínimos
EMPRESA->>AUTORIDAD: Enero, comunica servicios mínimos
SINDICATO->>AUTORIDAD: Divergencia: en 30 d.n. presenta informe con observaciones
SINDICATO->>AUTORIDAD: No divergencia: aceptación tácita de la comunicación del empleador
AUTORIDAD->>ÓRGANO INDEPENDIENTE: En 10 d.h. designa al O.I. determinar servicios mínimos
loop Check
EMPRESA->>EMPRESA: Si empresa no presenta, <br/>ver divergencia inmediata anterior
end
loop Check
ÓRGANO INDEPENDIENTE->>ÓRGANO INDEPENDIENTE: -Comunica si acepta en 10 d.h. <br/>-Si acepta, 30 d.h. resuelve <br/>-Si no responde, AT designa otro O.I. <br/>-O resuelve la divergencia <br/>-También resuelve <br/>si vence plazo sin que OI resuelva
end
Note over SINDICATO, AUTORIDAD:-Autoridad resuelve divergencia <br/>en 5 d.h. de recibido el informe. <br/>-Cabe apelación en 15 d.h. <br/>-Autoridad traslada apel. al O.I. <br/>en 5 d.h. <br/> -Superior resuelve apelación
")
DiagrammeR::mermaid("
sequenceDiagram
participant EMPRESA
participant SINDICATO
participant AUTORIDAD
participant ÓRGANO INDEPENDIENTE
Note over EMPRESA, SINDICATO: Servicios mínimos: <br/>-Número y ocupación trabajadores <br/>necesarios <br/>-Horarios y turnos <br/>-Periodicidad <br/>-Oportunidad
EMPRESA->>SINDICATO: Enero, comunica servicios mínimos
EMPRESA->>AUTORIDAD: Enero, comunica servicios mínimos
SINDICATO->>AUTORIDAD: Divergencia: en 30 d.n. presenta informe con observaciones
SINDICATO->>AUTORIDAD: No divergencia: aceptación tácita de la comunicación del empleador
AUTORIDAD->>ÓRGANO INDEPENDIENTE: En 10 d.h. designa al O.I. determinar servicios mínimos
loop Check
EMPRESA->>EMPRESA: Si empresa no presenta, <br/>ver divergencia inmediata anterior
end
loop Check
ÓRGANO INDEPENDIENTE->>ÓRGANO INDEPENDIENTE: -Comunica si acepta en 10 d.h. <br/>-Si acepta, 30 d.h. resuelve <br/>-Si no responde, AT designa otro O.I. <br/>-O resuelve la divergencia <br/>-También resuelve <br/>si vence plazo sin que OI resuelva
end
Note over SINDICATO, AUTORIDAD:-Autoridad resuelve divergencia <br/>en 5 d.h. de recibido el informe. <br/>-Cabe apelación en 15 d.h. <br/>-Autoridad traslada apel. al O.I. <br/>en 5 d.h. <br/> -Superior resuelve apelación
")
DiagrammeR::mermaid("
sequenceDiagram
participant EMPRESA
participant SINDICATO
participant AUTORIDAD
participant ÓRGANO INDEPENDIENTE
Note over EMPRESA, SINDICATO: Servicios mínimos: <br/>-Número y ocupación trabajadores <br/>necesarios <br/>-Horarios y turnos <br/>-Periodicidad <br/>-Oportunidad
EMPRESA->>SINDICATO: Enero, comunica servicios mínimos
EMPRESA->>AUTORIDAD: Enero, comunica servicios mínimos
SINDICATO->>AUTORIDAD: Divergencia: en 30 d.n. presenta informe con observaciones
SINDICATO->>AUTORIDAD: No divergencia: aceptación tácita de la comunicación del empleador
AUTORIDAD->>ÓRGANO INDEPENDIENTE: En 10 d.h. designa al O.I. determinar servicios mínimos
loop Check
EMPRESA->>EMPRESA: Si empresa no presenta, <br/>ver divergencia inmediata anterior
end
loop Check
ÓRGANO INDEPENDIENTE->>ÓRGANO INDEPENDIENTE: -Comunica si acepta en 10 d.h. <br/>-Si acepta, 30 d.h. resuelve <br/>-Si no responde, AT designa otro O.I. <br/>-O resuelve la divergencia <br/>-También resuelve <br/>si vence plazo sin que OI resuelva
end
Note over SINDICATO, AUTORIDAD:-Autoridad resuelve divergencia <br/>en 5 d.h. de recibido el informe. <br/>-Cabe apelación en 15 d.h. <br/>-Autoridad traslada apel. al O.I. <br/>en 5 d.h. <br/> -Superior resuelve apelación
")
DiagrammeR::mermaid("
sequenceDiagram
participant EMPRESA
participant SINDICATO
participant AUTORIDAD
participant ÓRGANO INDEPENDIENTE
Note over EMPRESA, SINDICATO: Servicios mínimos: <br/>-Número y ocupación trabajadores <br/>necesarios <br/>-Horarios y turnos <br/>-Periodicidad <br/>-Oportunidad
EMPRESA->>SINDICATO: Enero, comunica servicios mínimos
EMPRESA->>AUTORIDAD: Enero, comunica servicios mínimos
SINDICATO->>AUTORIDAD: Divergencia: en 30 d.n. presenta informe con observaciones
SINDICATO->>AUTORIDAD: No divergencia: aceptación tácita de la comunicación del empleador
AUTORIDAD->>ÓRGANO INDEPENDIENTE: En 10 d.h. designa al O.I. determinar servicios mínimos
loop Check
EMPRESA->>EMPRESA: Si empresa no presenta, <br/>ver divergencia inmediata anterior
end
loop Check
ÓRGANO INDEPENDIENTE->>ÓRGANO INDEPENDIENTE: -Comunica si acepta en 10 d.h. <br/>-Si acepta, 30 d.h. resuelve <br/>-Si no responde, AT designa otro O.I. <br/>-O resuelve la divergencia <br/>-También resuelve <br/>si vence plazo sin que OI resuelva
end
Note over SINDICATO, AUTORIDAD:-Autoridad resuelve divergencia <br/>en 5 d.h. de recibido el informe. <br/>-Cabe apelación en 15 d.h. <br/>-Autoridad traslada apel. al O.I. <br/>en 5 d.h. <br/> -Superior resuelve apelación
")
blogdown:::preview_site()
DiagrammeR::mermaid("
sequenceDiagram
participant EMPRESA
participant SINDICATO
participant AUTORIDAD
participant ÓRGANO INDEPENDIENTE
Note over EMPRESA, SINDICATO: Servicios mínimos: <br/>-Número y ocupación trabajadores <br/>necesarios <br/>-Horarios y turnos <br/>-Periodicidad <br/>-Oportunidad
EMPRESA->>SINDICATO: Enero, comunica servicios mínimos
EMPRESA->>AUTORIDAD: Enero, comunica servicios mínimos
SINDICATO->>AUTORIDAD: Divergencia: en 30 d.n. presenta informe con observaciones
SINDICATO->>AUTORIDAD: No divergencia: aceptación tácita de la comunicación del empleador
AUTORIDAD->>ÓRGANO INDEPENDIENTE: En 10 d.h. designa al O.I. determinar servicios mínimos
loop Check
EMPRESA->>EMPRESA: Si empresa no presenta, <br/>ver divergencia inmediata anterior
end
loop Check
ÓRGANO INDEPENDIENTE->>ÓRGANO INDEPENDIENTE: -Comunica si acepta en 10 d.h. <br/>-Si acepta, 30 d.h. resuelve <br/>-Si no responde, AT designa otro O.I. <br/>-O resuelve la divergencia <br/>-También resuelve <br/>si vence plazo sin que OI resuelva
end
Note over SINDICATO, AUTORIDAD:-Autoridad resuelve divergencia <br/>en 5 d.h. de recibido el informe. <br/>-Cabe apelación en 15 d.h. <br/>-Autoridad traslada apel. al O.I. <br/>en 5 d.h. <br/> -Superior resuelve apelación
")
blogdown:::preview_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
install.packages(c("forcats", "knitr", "rappdirs", "reprex"))
install.packages(c("forcats", "knitr", "rappdirs", "reprex"))
DiagrammeR::mermaid("
stateDiagram
[*] --> Still
Still --> [*]
Still --> Moving
Moving --> Still
Moving --> Crash
Crash --> [*]
")
DiagrammeR::mermaid("
stateDiagram
[*] --> Still
Still --> [*]
Still --> Moving
Moving --> Still
Moving --> Crash
Crash --> [*]
")
DiagrammeR::mermaid("
stateDiagram
[*] --> Still
Still --> [*]
Still --> Moving
Moving --> Still
Moving --> Crash
Crash --> [*]
")
knitr::opts_chunk$set(echo = FALSE, message = FALSE, warning = FALSE)
DiagrammeR::mermaid("
graph LR;
A((Orange)) --> B((Grey));
classDef orange fill:#f96;
classDef grey fill:#d3d3d3;
class A orange;
class B grey;
")
DiagrammeR::mermaid("
sequenceDiagram
participant EMPRESA
participant SINDICATO
participant AUTORIDAD
participant ÓRGANO INDEPENDIENTE
Note over EMPRESA, SINDICATO: Servicios mínimos: <br/>-Número y ocupación trabajadores <br/>necesarios <br/>-Horarios y turnos <br/>-Periodicidad <br/>-Oportunidad
EMPRESA->>SINDICATO: Enero, comunica servicios mínimos
EMPRESA->>AUTORIDAD: Enero, comunica servicios mínimos
SINDICATO->>AUTORIDAD: Divergencia: en 30 d.n. presenta informe con observaciones
SINDICATO->>AUTORIDAD: No divergencia: aceptación tácita de la comunicación del empleador
AUTORIDAD->>ÓRGANO INDEPENDIENTE: En 10 d.h. designa al O.I. determinar servicios mínimos
loop Check
EMPRESA->>EMPRESA: Si empresa no presenta, <br/>ver divergencia inmediata anterior
end
loop Check
ÓRGANO INDEPENDIENTE->>ÓRGANO INDEPENDIENTE: -Comunica si acepta en 10 d.h. <br/>-Si acepta, 30 d.h. resuelve <br/>-Si no responde, AT designa otro O.I. <br/>-O resuelve la divergencia <br/>-También resuelve <br/>si vence plazo sin que OI resuelva
end
Note over SINDICATO, AUTORIDAD:-Autoridad resuelve divergencia <br/>en 5 d.h. de recibido el informe. <br/>-Cabe apelación en 15 d.h. <br/>-Autoridad traslada apel. al O.I. <br/>en 5 d.h. <br/> -Superior resuelve apelación
")
blogdown:::preview_site()
blogdown:::serve_site()
blogdown:::serve_site()
knitr::opts_chunk$set(echo = FALSE, message = FALSE, warning = FALSE)
DiagrammeR::mermaid("
sequenceDiagram
participant EMPRESA
participant SINDICATO
participant AUTORIDAD
participant ÓRGANO INDEPENDIENTE
Note over EMPRESA, SINDICATO: Servicios mínimos: <br/>-Número y ocupación trabajadores <br/>necesarios <br/>-Horarios y turnos <br/>-Periodicidad <br/>-Oportunidad
EMPRESA->>SINDICATO: Enero, comunica servicios mínimos
EMPRESA->>AUTORIDAD: Enero, comunica servicios mínimos
SINDICATO->>AUTORIDAD: Divergencia: en 30 d.n. presenta informe con observaciones
SINDICATO->>AUTORIDAD: No divergencia: aceptación tácita de la comunicación del empleador
AUTORIDAD->>ÓRGANO INDEPENDIENTE: En 10 d.h. designa al O.I. determinar servicios mínimos
loop Check
EMPRESA->>EMPRESA: Si empresa no presenta, <br/>ver divergencia inmediata anterior
end
loop Check
ÓRGANO INDEPENDIENTE->>ÓRGANO INDEPENDIENTE: -Comunica si acepta en 10 d.h. <br/>-Si acepta, 30 d.h. resuelve <br/>-Si no responde, AT designa otro O.I. <br/>-O resuelve la divergencia <br/>-También resuelve <br/>si vence plazo sin que OI resuelva
end
Note over SINDICATO, AUTORIDAD:-Autoridad resuelve divergencia <br/>en 5 d.h. de recibido el informe. <br/>-Cabe apelación en 15 d.h. <br/>-Autoridad traslada apel. al O.I. <br/>en 5 d.h. <br/> -Superior resuelve apelación
")
DiagrammeR::mermaid("
sequenceDiagram
participant EMPRESA
participant SINDICATO
participant AUTORIDAD
participant ÓRGANO INDEPENDIENTE
Note over EMPRESA, SINDICATO: Servicios mínimos: <br/>-Número y ocupación trabajadores <br/>necesarios <br/>-Horarios y turnos <br/>-Periodicidad <br/>-Oportunidad
EMPRESA->>SINDICATO: Enero, comunica servicios mínimos
EMPRESA->>AUTORIDAD: Enero, comunica servicios mínimos
SINDICATO->>AUTORIDAD: Divergencia: en 30 d.n. presenta informe con observaciones
SINDICATO->>AUTORIDAD: No divergencia: aceptación tácita de la comunicación del empleador
AUTORIDAD->>ÓRGANO INDEPENDIENTE: En 10 d.h. designa al O.I. determinar servicios mínimos
loop Check
EMPRESA->>EMPRESA: Si empresa no presenta, <br/>ver divergencia inmediata anterior
end
loop Check
ÓRGANO INDEPENDIENTE->>ÓRGANO INDEPENDIENTE: -Comunica si acepta en 10 d.h. <br/>-Si acepta, 30 d.h. resuelve <br/>-Si no responde, AT designa otro O.I. <br/>-O resuelve la divergencia <br/>-También resuelve <br/>si vence plazo sin que OI resuelva
end
Note over SINDICATO, AUTORIDAD:-Autoridad resuelve divergencia <br/>en 5 d.h. de recibido el informe. <br/>-Cabe apelación en 15 d.h. <br/>-Autoridad traslada apel. al O.I. <br/>en 5 d.h. <br/> -Superior resuelve apelación
")
blogdown:::preview_site()
install.packages("widgetframe")
blogdown:::preview_site()
knitr::opts_chunk$set(echo = FALSE, message = FALSE, warning = FALSE)
library(DiagrammeR)
DiagrammeR::mermaid("
sequenceDiagram
participant EMPRESA
participant SINDICATO
participant AUTORIDAD
participant ÓRGANO INDEPENDIENTE
Note over EMPRESA, SINDICATO: Servicios mínimos: <br/>-Número y ocupación trabajadores <br/>necesarios <br/>-Horarios y turnos <br/>-Periodicidad <br/>-Oportunidad
EMPRESA->>SINDICATO: Enero, comunica servicios mínimos
EMPRESA->>AUTORIDAD: Enero, comunica servicios mínimos
SINDICATO->>AUTORIDAD: Divergencia: en 30 d.n. presenta informe con observaciones
SINDICATO->>AUTORIDAD: No divergencia: aceptación tácita de la comunicación del empleador
AUTORIDAD->>ÓRGANO INDEPENDIENTE: En 10 d.h. designa al O.I. determinar servicios mínimos
loop Check
EMPRESA->>EMPRESA: Si empresa no presenta, <br/>ver divergencia inmediata anterior
end
loop Check
ÓRGANO INDEPENDIENTE->>ÓRGANO INDEPENDIENTE: -Comunica si acepta en 10 d.h. <br/>-Si acepta, 30 d.h. resuelve <br/>-Si no responde, AT designa otro O.I. <br/>-O resuelve la divergencia <br/>-También resuelve <br/>si vence plazo sin que OI resuelva
end
Note over SINDICATO, AUTORIDAD:-Autoridad resuelve divergencia <br/>en 5 d.h. de recibido el informe. <br/>-Cabe apelación en 15 d.h. <br/>-Autoridad traslada apel. al O.I. <br/>en 5 d.h. <br/> -Superior resuelve apelación
")
blogdown:::preview_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::new_post_addin()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown::build_site()
blogdown:::serve_site()
blogdown::build_site()
blogdown::build_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::new_post_addin()
blogdown:::serve_site()
blogdown:::new_post_addin()
blogdown:::update_meta_addin()
blogdown:::serve_site()
blogdown:::new_post_addin()
blogdown:::preview_site()
blogdown:::preview_site()
blogdown:::preview_site()
blogdown:::serve_site()
blogdown:::serve_site()
xfun::session_info('blogdown')
blogdown::update_hugo()
blogdown::install_hugo()
xfun::session_info('blogdown')
xfun::session_info('blogdown')
blogdown:::serve_site()
blogdown:::new_post_addin()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
install.packages('blogdown')
install.packages("blogdown")
install.packages("blogdown")
install.packages("blogdown")
install.packages("rmarkdown")
blogdown::build_dir()
blogdown:::preview_site()
rmarkdown::pdf_document()
blogdown:::preview_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown::hugo_version()
blogdown::update_hugo()
blogdown::install_hugo()
blogdown::install_hugo(force = TRUE)
blogdown:::preview_site()
blogdown:::preview_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::preview_site()
blogdown:::serve_site()
blogdown:::new_post_addin()
blogdown:::new_post_addin()
xfun::session_info('blogdown')
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::new_post_addin()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown::install_hugo()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown::install_hugo()
blogdown:::serve_site()
blogdown:::serve_site()
xaringan:::inf_mr()
xaringan:::inf_mr()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown::build_site()
blogdown::build_site()
blogdown:::preview_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown::build_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
install.packages("blogdown")
blogdown:::serve_site()
blogdown::install_hugo()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
